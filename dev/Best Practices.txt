Best Practices Journal

Do's:

- Make sure to keep track of seed values that were used to generate random numbers to guarantee reproducibility. Also, make sure that all random number generators used by your code have been seeded, and keep in mind that if you re-run code cells in interactive environments, such as Jupyter Notebook, without setting again the seed values for the generators, you will not reproduce your previous results.

- If you are writing text in more than one language, make sure that every sentence is properly translated. Do not leave portions of the text available in only one language. This will avoid mistranslations by the readers.

- Be careful with the working environments. I had some Python packages installed on my system before installing Anaconda. I had to install them again to make them work in the Anaconda environment, because the paths for the libraries of the working environments are different.

- When using Anaconda to install new libraries/packages, make sure that the Anaconda repository has writing privileges, otherwise installation will fail.

- If your code reads from or writes to files in other directories, be careful when moving your files, because the relative paths to the files accessed by your code may change.

- To validate your program, run smaller instances of your experiments, to make sure there are no bugs in the code before running a complete version of the experiments.

- To verify if your work is reproducible, follow your own instructions in a clean environment from the beginning. This helps finding dependencies that may not be listed in your instructions.

Don'ts:

- A paper version of the notebook featuring only the final results will not reflect any changes made in the source code.

- Take care with mathematical operations (such as division) with variables that will be used as indexes. They can turn into floats and generate errors, since indexes should be integers.

- Do not use standard parameter values for built-in functions from Python libraries, since they can change in future updates. Always define explicitly every parameter value for each function used.
